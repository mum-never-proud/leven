{"version":3,"sources":["leven.js"],"names":["assertString","input","TypeError","module","exports","a","b","length","distanceMatrix","Array","fill","map","i","j","replaceCost","Math","min"],"mappings":";AAAA,SAASA,EAAaC,GAChB,GAAiB,iBAAVA,EACH,MAAA,IAAIC,UAAU,8DAIxBC,OAAOC,QAAU,SAASC,EAAGC,GAIvBD,GAHJL,EAAaK,GACbL,EAAaM,GAEI,IAAbD,EAAEE,OACGD,OAAAA,EAAEC,OAGPD,GAAa,IAAbA,EAAEC,OACGF,OAAAA,EAAEE,OAKN,IAFCC,IAAAA,EAAiBC,MAAMH,EAAEC,QAAQG,KAAK,GAAGC,IAAI,WAAMF,OAAAA,MAAMJ,EAAEE,QAAQG,KAAK,KAErEE,EAAI,EAAGA,EAAIN,EAAEC,OAAQK,IAC5BJ,EAAeI,GAAG,GAAKA,EAGpB,IAAA,IAAIA,EAAI,EAAGA,EAAIP,EAAEE,OAAQK,IAC5BJ,EAAe,GAAGI,GAAKA,EAGpB,IAAA,IAAIA,EAAI,EAAGA,EAAIN,EAAEC,OAAQK,IACvB,IAAA,IAAIC,EAAI,EAAGA,EAAIR,EAAEE,OAAQM,IAAK,CAC3BC,IAAAA,EAAcT,EAAEQ,EAAI,KAAOP,EAAEO,EAAI,GAAK,EAAI,EAEhDL,EAAeI,GAAGC,GAAKE,KAAKC,IAC1BR,EAAeI,GAAGC,EAAI,GAAK,EAC3BL,EAAeI,EAAI,GAAGC,GAAK,EAC3BL,EAAeI,EAAI,GAAGC,EAAI,GAAKC,GAK9BN,OAAAA,EAAeF,EAAEC,OAAS,GAAGF,EAAEE,OAAS","file":"leven.js","sourceRoot":"..","sourcesContent":["function assertString(input) {\n  if (typeof input !== 'string') {\n    throw new TypeError('minimum edit distance can be compared only between strings');\n  }\n}\n\nmodule.exports = function(a, b) {\n  assertString(a);\n  assertString(b);\n\n  if (a.length === 0) {\n    return b.length;\n  }\n\n  if (b.length === 0) {\n    return a.length;\n  }\n\n  const distanceMatrix = Array(b.length).fill(0).map(() => Array(a.length).fill(0));\n\n  for (let i = 0; i < b.length; i++) {\n    distanceMatrix[i][0] = i;\n  }\n\n  for (let i = 0; i < a.length; i++) {\n    distanceMatrix[0][i] = i;\n  }\n\n  for (let i = 1; i < b.length; i++) {\n    for (let j = 1; j < a.length; j++) {\n      const replaceCost = a[j - 1] === b[j - 1] ? 0 : 1;\n\n      distanceMatrix[i][j] = Math.min(\n        distanceMatrix[i][j - 1] + 1, // insertion\n        distanceMatrix[i - 1][j] + 1, // deletion\n        distanceMatrix[i - 1][j - 1] + replaceCost // replace\n      );\n    }\n  }\n\n  return distanceMatrix[b.length - 1][a.length - 1];\n}\n"]}